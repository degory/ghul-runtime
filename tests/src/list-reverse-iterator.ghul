namespace Tests is
    use Microsoft.VisualStudio.TestTools.UnitTesting;

    use Collections.Iterable;
    use Collections.LIST;
    use Collections.LIST_REVERSE_ITERATOR;

    use Main.should;

    class LIST_REVERSE_ITERATOR_Should is
        @test()

        init() is si

        collect[T](iterator: LIST_REVERSE_ITERATOR[T]) -> Iterable[T] is
            let result = new LIST[T]();

            while iterator.move_next() do
                result.add(iterator.current);
            od

            return result;
        si        

        LIST_REVERSE_ITERATOR__iterator__given_empty_list__returns_no_elements() is
            @test()

            let iterator = new LIST_REVERSE_ITERATOR[int](new Collections.LIST[int]());

            should(collect(iterator)).equal(new Collections.LIST[int](0).to_array());
        si

        LIST_REVERSE_ITERATOR__iterator__given_single_element_list__returns_that_element() is
            @test()

            let iterator = new LIST_REVERSE_ITERATOR[int](new Collections.LIST[int]([1]));

            should(collect(iterator)).equal([1]);
        si

        LIST_REVERSE_ITERATOR__iterator__given_odd_length_multiple_element_list__returns_elements_in_reverse_order() is
            @test()

            let iterator = new LIST_REVERSE_ITERATOR[int](new Collections.LIST[int]([1, 2, 3, 6, 7, 8, 11]));

            should(collect(iterator)).equal([11, 8, 7, 6, 3, 2, 1]);
        si

        LIST_REVERSE_ITERATOR__iterator__given_even_length_multiple_element_list__returns_elements_in_reverse_order() is
            @test()

            let iterator = new LIST_REVERSE_ITERATOR[int](new Collections.LIST[int]([1, 2, 3, 6, 7, 8, 11, 3, 6, 2]));

            should(collect(iterator)).equal([2, 6, 3, 11, 8, 7, 6, 3, 2, 1]);
        si

    si
si