namespace Tests is

    use Collections;
    use NSubstitute;

    use NSubstitute.SubstituteExtensions.returns;
    use NSubstitute.SubstituteExtensions.received;

    use Microsoft.VisualStudio.TestTools.UnitTesting;

    use Ghul.Pipes;

    class MapPipeShould is
        @test()

        _is_log_cleared: bool static;

        init() is
            if !_is_log_cleared then
                IO.File.create("/tmp/ghul-pipes.txt").close();
                _is_log_cleared = true;
            fi
        si

        Map_EmptyArray_ReturnsEmptySequence() is
            @test()

            let pipe = 
                Ghul.Pipes.Pipe`[int]
                    .from(empty`[int]());

            let result = 
                pipe
                    .map(i => i.to_string());

            assert_are_equal(empty`[string](), result);
        si

        Map_IntsToStrings_ReturnsExpectedSequence() is
            @test()

            let pipe = 
                Ghul.Pipes.Pipe`[int]
                    .from([3, 4, 1, 5, 2, 3, 1, 4, 5]);

            let result = 
                pipe
                    .map(i => i.to_string());

            assert_are_equal(["3", "4", "1", "5", "2", "3", "1", "4", "5"], result);
        si

        Map_CalledTwice_AppliesBothFunctionsToEveryElementInCorrectOrder() is
            @test()

            let pipe = 
                Ghul.Pipes.Pipe`[int]
                    .from([1, 2, 3, 4, 5, 6]);

            let result = 
                pipe
                    .map(i => "" + i + "-first")
                    .map(i => i + "-second");

            assert_are_equal(["1-first-second", "2-first-second", "3-first-second", "4-first-second", "5-first-second", "6-first-second"], result);
        si
    si
si
